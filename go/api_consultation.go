/*
 * api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
	"log"
	"net/http"
	"strconv"
	"strings"
)

// A ConsultationApiController binds http requests to an api service and writes the service results to the http response
type ConsultationApiController struct {
	service ConsultationApiServicer
}

// NewConsultationApiController creates a default api controller
func NewConsultationApiController(s ConsultationApiServicer) Router {
	return &ConsultationApiController{service: s}
}

// Routes returns all of the api route for the ConsultationApiController
func (c *ConsultationApiController) Routes() Routes {
	return Routes{
		{
			"GetConsultations",
			strings.ToUpper("Get"),
			"/consultations",
			c.GetConsultations,
		},
		{
			"PostConsultation",
			strings.ToUpper("Post"),
			"/consultation",
			c.PostConsultation,
		},
	}
}

// GetConsultations - Get all consultations
func (c *ConsultationApiController) GetConsultations(w http.ResponseWriter, r *http.Request) {
	query := r.URL.Query()
	mentorId, _ := strconv.Atoi(query.Get("mentorId"))
	userId, _ := strconv.Atoi(query.Get("userId"))
	result, err := c.service.GetConsultations(mentorId, userId)
	if err != nil {
		w.WriteHeader(500)
		return
	}

	EncodeJSONResponse(result, nil, w)
}

// PostConsultation - Create a consultation
func (c *ConsultationApiController) PostConsultation(w http.ResponseWriter, r *http.Request) {
	consultation := &Consultation{}
	if err := json.NewDecoder(r.Body).Decode(&consultation); err != nil {
		log.Fatal(err)
		w.WriteHeader(500)
		return
	}

	result, err := c.service.PostConsultation(*consultation)
	if err != nil {
		w.WriteHeader(500)
		return
	}

	EncodeJSONResponse(result, nil, w)
}
