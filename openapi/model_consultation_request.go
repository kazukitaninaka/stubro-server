/*
 * openapi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type ConsultationRequest struct {
	UserId int `json:"userId"`

	MentorId int `json:"mentorId"`

	DesirableDate string `json:"desirableDate"`

	Message string `json:"message"`

	Uid string `json:"uid"`
}

type PatchIsPaymentDoneRequest struct {
	Uid string `json:"uid"`

	IsPaymentDone bool `json:"isPaymentDone"`
}

// AssertConsultationRequestRequired checks if the required fields are not zero-ed
func AssertConsultationRequestRequired(obj ConsultationRequest) error {
	elements := map[string]interface{}{
		"userId":        obj.UserId,
		"mentorId":      obj.MentorId,
		"desirableDate": obj.DesirableDate,
		"message":       obj.Message,
		"uid":           obj.Uid,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseConsultationRequestRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of ConsultationRequest (e.g. [][]ConsultationRequest), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseConsultationRequestRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aConsultationRequest, ok := obj.(ConsultationRequest)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertConsultationRequestRequired(aConsultationRequest)
	})
}
