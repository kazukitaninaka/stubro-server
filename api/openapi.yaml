openapi: 3.0.3
info:
  title: openapi
  version: "1.0"
servers:
- url: http://localhost:3000/go-api
paths:
  /users:
    get:
      description: get all users
      operationId: get-users
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                  - id: 1
                    username: Emily
                    email: emily@gmail.com
                    uid: nguoreag123456y
                  - id: 2
                    username: Tom
                    email: tom@gmail.com
                    uid: rbtrs3845nt
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: OK
      summary: Get all users
      tags:
      - user
  /user/{userId}:
    get:
      description: Retrieve the information of the user with the matching user ID.
      operationId: get-user-by-userId
      parameters:
      - description: Id of an existing user.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Get User Bob Fellow:
                  value:
                    id: 12345
                    username: Bob Fellow
                    email: bob.fellow@gmail.com
                    uid: jgriaeoji2834hg
              schema:
                $ref: '#/components/schemas/User'
          description: User Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: User Not Found
      summary: Get User Info by User ID
      tags:
      - user
    patch:
      description: Update the information of an existing user.
      operationId: patch-users-userId
      parameters:
      - description: Id of an existing user.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UserRequest'
        content:
          application/json:
            examples:
              Update username:
                value:
                  username: Rebecca
              Update Email:
                value:
                  email: rebecca@gmail.com
            schema:
              example:
                email: email
                username: username
              properties:
                username:
                  type: string
                email:
                  description: "If a new email is given, the user's email verified\
                    \ property will be set to false."
                  type: string
              title: UserRequest
              type: object
        description: Patch user properties to update.
      responses:
        "200":
          content:
            application/json:
              examples:
                Updated User Rebecca Baker:
                  value:
                    id: 13
                    username: Rebecca
                    email: rebecca@gmail.com
                    uid: ejwf494rgeji
              schema:
                $ref: '#/components/schemas/User'
          description: User Updated
        "404":
          description: User Not Found
        "409":
          description: Email Already Taken
      summary: Update User Information
      tags:
      - user
  /user/uid/{uid}:
    get:
      description: Retrieve the information of the user with the matching user ID.
      operationId: get-user-by-uid
      parameters:
      - explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Get User Bob Fellow:
                  value:
                    id: 12345
                    uid: ghre345gnjr
                    username: Bob Fellow
                    email: bob.fellow@gmail.com
              schema:
                $ref: '#/components/schemas/User'
          description: User Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: User Not Found
      summary: Get User Info by User UID
      tags:
      - user
    patch:
      description: Update the information of an existing user.
      operationId: update-user-by-userId
      parameters:
      - explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UserRequest_1'
        content:
          application/json:
            examples:
              Update username:
                value:
                  username: Rebecca
              Update Email:
                value:
                  email: rebecca@gmail.com
            schema:
              properties:
                username:
                  type: string
                email:
                  description: "If a new email is given, the user's email verified\
                    \ property will be set to false."
                  type: string
              title: UserRequest
              type: object
        description: Patch user properties to update.
      responses:
        "200":
          content:
            application/json:
              examples:
                Updated User Rebecca Baker:
                  value:
                    id: 13
                    uid: rgej5g5re
                    username: Rebecca
                    email: rebecca@gmail.com
              schema:
                $ref: '#/components/schemas/User'
          description: User Updated
        "404":
          description: User Not Found
        "409":
          description: Email Already Taken
      summary: Update User Information
      tags:
      - user
  /user:
    post:
      description: Create a new user.
      operationId: post-user
      requestBody:
        content:
          application/json:
            examples:
              Create User Bob Fellow:
                value:
                  username: BobFellow
                  email: bob.fellow@gmail.com
            schema:
              $ref: '#/components/schemas/User'
        description: Post the necessary fields for the API to create a new user.
      responses:
        "200":
          content:
            application/json:
              examples:
                New User Bob Fellow:
                  value:
                    id: 12345
                    uid: gjeu34trg
                    username: BobFellow
                    email: bob.fellow@gmail.com
              schema:
                $ref: '#/components/schemas/User'
          description: User Created
        "400":
          description: Missing Required Information
        "409":
          description: Email Already Taken
      summary: Create New User
      tags:
      - user
  /mentors:
    get:
      operationId: get-mentors
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                  - id: 1
                    username: Kazuki
                    email: kazuki@gmail.com
                    image: https://placehold.jp/150x150.png
                    clickCount: 0
                    destination: アメリカ
                    eduOrg: Reading High School
                    term:
                      id: 5
                      name: 半年〜1年
                    type:
                    - id: 7
                      name: 大学留学
                    - id: 9
                      name: 寮
                    - id: 10
                      name: 私費留学
                    price: 100
                  - id: 2
                    CreatedAt: 2022-02-11T08:38:42.351Z
                    UpdatedAt: 2022-02-11T08:38:42.351Z
                    DeletedAt: null
                    username: Eren
                    email: eren@gmail.com
                    image: https://placehold.jp/150x150.png
                    clickCount: 0
                    destination: イギリス
                    eduOrg: University of Oxford
                    term:
                      id: 8
                      name: 4年
                    type:
                    - id: 7
                      name: 大学留学
                    - id: 9
                      name: 寮
                    - id: 10
                      name: 私費留学
                    price: 3000
                  - id: 3
                    CreatedAt: 2022-02-11T08:38:42.353Z
                    UpdatedAt: 2022-02-11T08:38:42.353Z
                    DeletedAt: null
                    username: Armin
                    email: armin@gmail.com
                    image: https://placehold.jp/150x150.png
                    clickCount: 0
                    destination: デンマーク
                    eduOrg: University of Copenhagen
                    term:
                      id: 5
                      name: 半年〜1年
                    type:
                    - id: 6
                      name: 交換留学
                    - id: 7
                      name: 大学留学
                    price: 2500
                  - id: 4
                    CreatedAt: 2022-02-11T08:38:42.355Z
                    UpdatedAt: 2022-02-11T08:38:42.355Z
                    DeletedAt: null
                    username: Mikasa
                    email: mikasa@gmail.com
                    image: https://placehold.jp/150x150.png
                    clickCount: 0
                    destination: アメリカ
                    eduOrg: "University of California, Los Angeles"
                    term:
                      id: 5
                      name: 半年〜1年
                    type:
                    - id: 6
                      name: 交換留学
                    - id: 7
                      name: 大学留学
                    - id: 8
                      name: 奨学金利用
                    - id: 9
                      name: 寮
                    price: 2000
              schema:
                items:
                  $ref: '#/components/schemas/Mentor'
                type: array
          description: OK
      summary: Get all mentors
      tags:
      - mentor
  /mentor:
    post:
      operationId: post-mentor
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  id: 1
                  username: Kazuki
                  email: kazuki@gmail.com
                  image: https://placehold.jp/150x150.png
                  clickCount: 0
                  destination: アメリカ
                  eduOrg: Reading High School
                  term:
                    id: 8
                    name: 4年
                  type:
                  - id: 7
                    name: 大学留学
                  - id: 9
                    name: 寮
                  - id: 10
                    name: 私費留学
                  price: 100
            schema:
              $ref: '#/components/schemas/Mentor'
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    id: 1
                    username: Kazuki
                    email: kazuki@gmail.com
                    image: https://placehold.jp/150x150.png
                    clickCount: 0
                    destination: アメリカ
                    eduOrg: Reading High School
                    term:
                      id: 8
                      name: 4年
                    type:
                    - id: 7
                      name: 大学留学
                    - id: 9
                      name: 寮
                    - id: 10
                      name: 私費留学
                    price: 100
              schema:
                $ref: '#/components/schemas/Mentor'
          description: OK
      summary: Add a mentor
      tags:
      - mentor
  /mentor/{mentorId}:
    get:
      operationId: get-mentor-by-mentorId
      parameters:
      - explode: false
        in: path
        name: mentorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/Mentor'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get a mentor
      tags:
      - mentor
    patch:
      operationId: patch-mentor
      parameters:
      - explode: false
        in: path
        name: mentorId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Update type:
                value:
                  type:
                  - id: 7
                    name: 大学留学
                  - id: 9
                    name: 寮
                  - id: 10
                    name: 私費留学
              Update price:
                value:
                  price: 3000
            schema:
              $ref: '#/components/schemas/Mentor'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mentor'
          description: OK
      summary: Update mentor's information
      tags:
      - mentor
  /consultation:
    post:
      description: Consultation details
      operationId: post-consultation
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  userId: 23
                  mentorId: 55
                  desirableDate: 2月15日19:00~20:00
                  message: 寮生活について知りたいです！
            schema:
              $ref: '#/components/schemas/ConsultationRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    id: 1234
                    user:
                      id: 3
                      username: James
                    mentor:
                      id: 4
                      username: Tom
                    desirableDate: 2月15日19:00~20:00
                    message: 寮生活について知りたいです！
              schema:
                $ref: '#/components/schemas/Consultation'
          description: OK
      summary: Create a consultation
      tags:
      - consultation
  /consultations:
    get:
      operationId: get-consultations
      parameters:
      - description: Get consultations of a specific user
        explode: true
        in: query
        name: userId
        required: false
        schema:
          type: number
        style: form
      - description: Get consultations of a specific mentor
        explode: true
        in: query
        name: mentorId
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                  - id: 1234
                    user:
                      id: 3
                      username: James
                    mentor:
                      id: 4
                      username: Tom
                    desirableDate: 2月15日19:00~20:00
                    message: 寮生活について知りたいです！
                  - id: 12345
                    user:
                      id: 36
                      username: Kazuki
                    mentor:
                      id: 46
                      username: Yoshio
                    desirableDate: 2月15日19:00~20:00
                    message: 寮生活について知りたいです！
              schema:
                items:
                  $ref: '#/components/schemas/Consultation'
                type: array
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
      summary: Get all consultations
      tags:
      - consultation
  /terms:
    get:
      operationId: get-terms
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Term'
                type: array
          description: OK
      summary: Your GET endpoint
      tags:
      - term
  /types:
    get:
      operationId: get-types
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Type'
                type: array
          description: OK
      summary: Your GET endpoint
      tags:
      - type
components:
  requestBodies:
    UserRequest_1:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserRequest_1'
    UserRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserRequest'
  responses: {}
  schemas:
    User:
      example:
        uid: uid
        id: 0.8008281904610115
        email: email
        username: username
      properties:
        id:
          type: number
        username:
          minLength: 1
          type: string
        email:
          minLength: 1
          type: string
        uid:
          minLength: 1
          type: string
      title: User
      type: object
      x-examples:
        example-1:
          id: 1
          username: Emily
          email: emily@gmail.com
          uid: akjriek245gkri
    ConsultationRequest:
      example:
        desirableDate: desirableDate
        id: 0.8008281904610115
        message: message
        userId: 6.027456183070403
        mentorId: 1.4658129805029452
      properties:
        id:
          readOnly: true
          type: number
        userId:
          type: number
        mentorId:
          type: number
        desirableDate:
          minLength: 1
          type: string
        message:
          minLength: 1
          type: string
      required:
      - desirableDate
      - mentorId
      - message
      - userId
      title: ConsultationRequest
      type: object
      x-examples:
        example-1:
          id: 1234
          userId: 23
          mentorId: 55
          desirableDate: 2月15日19:00~20:00
          message: 寮生活について知りたいです！
    Consultation:
      example:
        mentor:
          image: image
          clickCount: 6.027456183070403
          price: 5.637376656633329
          destination: destination
          term:
            name: name
            id: 1.4658129805029452
          id: 0.8008281904610115
          type:
          - name: name
            id: 5.962133916683182
          - name: name
            id: 5.962133916683182
          email: email
          username: username
          eduOrg: eduOrg
        desirableDate: desirableDate
        id: 0.8008281904610115
        message: message
        user:
          uid: uid
          id: 0.8008281904610115
          email: email
          username: username
      properties:
        id:
          readOnly: true
          type: number
        user:
          $ref: '#/components/schemas/User'
        mentor:
          $ref: '#/components/schemas/Mentor'
        desirableDate:
          minLength: 1
          type: string
        message:
          minLength: 1
          type: string
      required:
      - desirableDate
      - mentor
      - message
      - user
      title: Consultation
      type: object
      x-examples:
        example-1:
          id: 1234
          user:
            id: 3
            username: James
          mentor:
            id: 4
            username: Tom
          desirableDate: 2月15日19:00~20:00
          message: 寮生活について知りたいです！
    Mentor:
      example:
        image: image
        clickCount: 6.027456183070403
        price: 5.637376656633329
        destination: destination
        term:
          name: name
          id: 1.4658129805029452
        id: 0.8008281904610115
        type:
        - name: name
          id: 5.962133916683182
        - name: name
          id: 5.962133916683182
        email: email
        username: username
        eduOrg: eduOrg
      properties:
        id:
          type: number
        username:
          minLength: 1
          type: string
        email:
          minLength: 1
          type: string
        image:
          minLength: 1
          type: string
        clickCount:
          type: number
        destination:
          minLength: 1
          type: string
        eduOrg:
          minLength: 1
          type: string
        term:
          $ref: '#/components/schemas/Term'
        type:
          items:
            $ref: '#/components/schemas/Type'
          minItems: 1
          type: array
          uniqueItems: true
        price:
          type: number
      type: object
      x-examples:
        example-1:
          id: 1
          username: Kazuki
          email: kazuki@gmail.com
          image: https://placehold.jp/150x150.png
          clickCount: 0
          destination: アメリカ
          eduOrg: Reading High School
          term:
            id: 8
            name: 4年
          type:
          - id: 7
            name: 大学留学
          - id: 9
            name: 寮
          - id: 10
            name: 私費留学
          price: 100
    Type:
      example:
        name: name
        id: 5.962133916683182
      properties:
        id:
          type: number
        name:
          minLength: 1
          type: string
      required:
      - name
      type: object
      x-examples:
        example-1:
          id: 7
          name: 大学留学
    Term:
      example:
        name: name
        id: 1.4658129805029452
      properties:
        id:
          type: number
        name:
          minLength: 1
          type: string
      required:
      - name
      type: object
      x-examples:
        example-1:
          id: 8
          name: 4年
    Error:
      properties:
        error:
          minLength: 1
          type: string
        message:
          minLength: 1
          type: string
      required:
      - error
      - message
      type: object
      x-examples:
        example-1:
          error: Error
          message: Not authenticated
    UserRequest:
      example:
        email: email
        username: username
      properties:
        username:
          type: string
        email:
          description: "If a new email is given, the user's email verified property\
            \ will be set to false."
          type: string
      title: UserRequest
      type: object
    UserRequest_1:
      properties:
        username:
          type: string
        email:
          description: "If a new email is given, the user's email verified property\
            \ will be set to false."
          type: string
      title: UserRequest
      type: object
